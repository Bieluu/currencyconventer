{"version":3,"sources":["contentTabs.js","serviceWorker.js","js/config.js","js/getCurrenciesValue.js","index.js","navbar.js","content.js"],"names":["className","id","role","aria-labelledby","type","value","data-toggle","data-target","disabled","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","CONVERT_URL","API_URL","calculate","amount","$","val","firstCurrency","secondCurrency","fetch","response","json","responseJson","result","ReactDOM","render","document","getElementById","setCurrency","pressedCurrency","which","text","modal","map","currency","key","code","mid","onClick","href","aria-controls","aria-selected","URL","process","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","on"],"mappings":"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","file":"static/js/main.2307e94b.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nexport default () => {\r\n    return (\r\n\r\n        <div className=\"row mt-5\">\r\n            <div className=\"col-sm-12 text-center\">\r\n                <div className=\"tab-content\" id=\"pills-tabContent\">\r\n                    <div className=\"tab-pane fade show active\" id=\"pills-calc\" role=\"tabpanel\" aria-labelledby=\"pills-home-calc\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-7\">\r\n                                <h1>€onver₮</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"input-group\">\r\n                                    <input id=\"amount\" type=\"text\" className=\"form-control text-white bg-black\"/>\r\n                                    <div className=\"input-group-append\">\r\n                                        <button className=\"btn btn-outline-secondary bg-black dropdown-toggle\"\r\n                                        type=\"button\" id=\"pickFstCur\" value=\"USD\" data-toggle=\"modal\" data-target=\"#setCurModal1\">\r\n                                            USD\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-1 my-auto\"><h3>₮o</h3></div>\r\n\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"input-group\">\r\n                                    <input type=\"text\" className=\"form-control text-white bg-black\" id=\"result\" disabled />\r\n                                    <div className=\"input-group-append\">\r\n                                        <button className=\"btn btn-outline-secondary bg-black dropdown-toggle\"\r\n                                        type=\"button\" id=\"pickSndCur\" value=\"USD\" data-toggle=\"modal\" data-target=\"#setCurModal2\">\r\n                                            USD\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div id=\"currencyListModal\"></div>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                    <div className=\"tab-pane fade\" id=\"pills-rates\" role=\"tabpanel\" aria-labelledby=\"pills-rates-tab\">\r\n                        <div id=\"currenciesList\" className=\"row\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const API_URL = 'https://currency-conventer.herokuapp.com';\r\nexport const CONVERT_URL = API_URL + '/api/convert/'","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport $ from 'jquery';\r\nimport {CONVERT_URL} from './config'\r\n\r\nfunction calculate(){\r\n    let amount = $('#amount').val();\r\n    let firstCurrency = $('#pickFstCur').val();\r\n    let secondCurrency = $('#pickSndCur').val();\r\n    fetch(CONVERT_URL + `${amount}/${firstCurrency}/${secondCurrency}`)\r\n    .then((response) => response.json())\r\n    .then((responseJson) => {\r\n        $(\"#result\").val(responseJson.result);\r\n    })\r\n    .catch((error) => {\r\n        //no connection to api\r\n        ReactDOM.render(\r\n            <>\r\n                <h1 className=\"mx-auto mt-5\">API is not responding</h1>\r\n            </>\r\n            , document.getElementById('pills-calc'));\r\n            console.log(error);\r\n    });\r\n}\r\n\r\nfetch(CONVERT_URL + `all`)\r\n    .then((response) => response.json())\r\n    .then((responseJson) => {\r\n        ReactDOM.render(\r\n            <>\r\n                {responseJson.map(currency =>\r\n                    <div key={currency.code} className=\"col-md-3 mb-3 mb-md-5\">\r\n                        <div className=\"card text-center\">\r\n                            <div className=\"card-header bg-black\">\r\n                                <h3>{currency.code}</h3>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <h4>{currency.currency}</h4>\r\n                                <p>{currency.mid}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </>\r\n            , document.getElementById('currenciesList'));\r\n\r\n        ReactDOM.render(\r\n            <>\r\n                <div id=\"setCurModal1\" className=\"modal fade\" role=\"dialog\">\r\n                    <div className=\"modal-dialog modal-dialog-centered\">\r\n\r\n                        <div className=\"modal-content bg-black\">\r\n                                {responseJson.map(currency =>\r\n                                    <div key={currency.code} className=\"m-2\"><button onClick={() => setCurrency(currency.code, 1)} \r\n                                    className=\"btn bg-white col-6\" value={currency.code}>{currency.code}\r\n                                <p className=\"text-black-50\">{currency.currency}</p></button></div>)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"setCurModal2\" className=\"modal fade\" role=\"dialog\">\r\n                    <div className=\"modal-dialog modal-dialog-centered\">\r\n\r\n                        <div className=\"modal-content bg-black\">\r\n                                {responseJson.map(currency =>\r\n                                    <div key={currency.code} className=\"m-2\"><button onClick={() => setCurrency(currency.code, 2)} \r\n                                    className=\"btn bg-white col-6\" value={currency.code}>{currency.code}\r\n                                <p className=\"text-black-50\">{currency.currency}</p></button></div>)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n            , document.getElementById('currencyListModal'));\r\n    })\r\n    .catch((error) => {\r\n        //no connection to api\r\n        ReactDOM.render(\r\n            <>\r\n                <h1 className=\"mx-auto mt-5\">API is not responding</h1>\r\n            </>\r\n            , document.getElementById('currenciesList'));\r\n        console.log(error);\r\n    });\r\n\r\n    function setCurrency(pressedCurrency, which){\r\n        if(which === 1){\r\n            $(\"#pickFstCur\").text(pressedCurrency).val(pressedCurrency);\r\n            calculate();\r\n            $('#setCurModal1').modal('hide');\r\n        }\r\n        else{\r\n            $(\"#pickSndCur\").text(pressedCurrency).val(pressedCurrency);\r\n            calculate();\r\n            $('#setCurModal2').modal('hide');\r\n        }\r\n\r\n        }\r\n\r\nexport default () => calculate();","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Navbar from './navbar';\r\nimport Content from './content';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'jquery/src/jquery';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.min.js';\r\nimport calculate from './js/getCurrenciesValue.js'\r\nimport $ from 'jquery'; \r\n\r\nReactDOM.render(\r\n    <div>\r\n    <Navbar />\r\n    <Content />\r\n    </div>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n    \r\n$('#amount').on('input', function() {\r\n    calculate();\r\n});","import React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n<nav className=\"navbar navbar-light mb-3 shadoweffect bg-black\">\r\n  <a className=\"btn btn-default mx-auto text-white\" href=\".\"><h2>€urrency €onven₮er</h2></a>\r\n</nav>\r\n  )\r\n}","import React from 'react';\r\nimport Tabs from './contentTabs';\r\n\r\nexport default () => {\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row text-center\">\r\n                <div className=\"col-md-12\">\r\n                    <ul className=\"nav nav-pills\" id=\"pills-tab\" role=\"tablist\">\r\n                        <li className=\"nav-item mx-auto\">\r\n                            <a className=\"nav-link active\" id=\"pills-calc-tab\" data-toggle=\"pill\" href=\"#pills-calc\" role=\"tab\" aria-controls=\"pills-calc\" aria-selected=\"true\"><h3>Exchange calculator</h3></a>\r\n                        </li>\r\n                        <li className=\"nav-item mx-auto\">\r\n                            <a className=\"nav-link\" id=\"pills-rates-tab\" data-toggle=\"pill\" href=\"#pills-rates\" role=\"tab\" aria-controls=\"pills-rates\" aria-selected=\"false\"><h3>Exchange rate$</h3></a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <Tabs />\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}"],"sourceRoot":""}