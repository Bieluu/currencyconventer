{"version":3,"sources":["components/container.js","components/navbar.js","components/result.js","config/rest.js","components/calculate.js","components/list.js","config/theme.js","functions/getCurrencies.js","App.js","serviceWorker.js","index.js"],"names":["StyledContainer","styled","div","Container","children","useStyles","makeStyles","root","position","bottom","width","withRouter","history","getLocation","location","pathname","substring","classes","React","useState","value","setValue","useEffect","BottomNavigation","onChange","event","newValue","push","className","BottomNavigationAction","label","icon","StyledDiv","Result","firstCurrency","secondCurrency","amount","output","API_URL","API_CONVERT","StyledLoaderContainer","StyledPaper","withStyles","padding","margin","Paper","StyledTextFieldGrid","Grid","StyledTextField","TextField","Calculate","currencies","list","setFirstCurrency","setSecondCurrency","setAmount","setOutput","apiResponded","setApiResponded","convert_url","axios","get","then","res","data","result","console","log","handleChange","target","name","elevation","container","justify","alignItems","variant","select","map","option","MenuItem","key","code","color","fontSize","item","xs","fullWidth","id","test","StyledList","StyledListElement","List","currency","mid","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","GetCurrencies","currenciesList","setCurrenciesList","GlobalStyle","createGlobalStyle","SpinnerContainer","App","listOfCurriences","getCurrencies","length","ThemeProvider","basename","process","path","component","exact","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c533085d.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledContainer = styled.div`\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    align-content: center;\r\n    flex-wrap: wrap;\r\n    color: #fff;\r\n    padding-bottom: calc(75px + 5vh);\r\n`;\r\n\r\nconst Container = ({children}) => (\r\n    <StyledContainer>{children}</StyledContainer>\r\n)\r\n\r\nexport default Container;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\nimport CompareArrowsIcon from '@material-ui/icons/CompareArrows';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'absolute',\r\n        bottom: \"5px\",\r\n        width: \"200px\",\r\n    },\r\n});\r\n\r\nconst Navbar = ({ history, location }) => {\r\n\r\n    const getLocation = location.pathname.substring(1);\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('');\r\n\r\n    React.useEffect(() => {\r\n        setValue(getLocation);\r\n    },[getLocation])\r\n\r\n    const handleChange = (event, newValue) => {\r\n        history.push(\"/\" + newValue)\r\n        setValue(newValue);\r\n    }\r\n\r\n    return (\r\n        <BottomNavigation value={value} onChange={handleChange} className={classes.root}>\r\n            <BottomNavigationAction value=\"\" label=\"Calculate\" icon={<CompareArrowsIcon />} />\r\n            <BottomNavigationAction value=\"list\" label=\"Rates\" icon={<ListAltIcon />} />\r\n        </BottomNavigation>\r\n    )\r\n}\r\n\r\nexport default withRouter(Navbar);\r\n\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledDiv = styled.div`\r\n    width: 100%;\r\n    text-align:center;\r\n`;\r\n\r\nconst Result = ( {firstCurrency, secondCurrency, amount, output}) => {\r\n    return (\r\n    <StyledDiv>\r\n        <p>{amount === '' ? 1 : amount} {firstCurrency} is equal to</p>\r\n        <h1>{output}</h1><h3> of {secondCurrency}</h3>\r\n    </StyledDiv>\r\n)}\r\n\r\nexport default Result;","const API_URL = `https://currency-conventer.herokuapp.com/api`\r\nexport const API_LIST = API_URL+'/convert/all'\r\nexport const API_CONVERT = API_URL+'/convert'\r\n\r\n/*\r\n\r\nconvert single currency = .../convert/PLN\r\nconvert multiple currencies = .../convert/PLN/USD\r\n\r\n*/","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Grid, TextField, MenuItem, Paper, withStyles } from '@material-ui/core';\r\n\r\nimport CompareArrowsIcon from '@material-ui/icons/CompareArrows';\r\n\r\nimport Result from './result'\r\n\r\nimport { StageSpinner } from \"react-spinners-kit\";\r\n\r\nimport { API_CONVERT } from '../config/rest'\r\nimport axios from 'axios'\r\n\r\nconst StyledLoaderContainer = styled.div`\r\n    width: 100%;\r\n    display:flex;\r\n    justify-content:center;\r\n    align-content: center;\r\n    align-items: center;\r\n    height: 156px;\r\n`;\r\n\r\nconst StyledPaper = withStyles({\r\n    root: {\r\n        padding: '15px',\r\n        margin: '15px'\r\n    },\r\n})(Paper)\r\n\r\nconst StyledTextFieldGrid = withStyles({\r\n    root: {\r\n        margin: '15px'\r\n    },\r\n})(Grid)\r\n\r\nconst StyledTextField = withStyles({\r\n    root: {\r\n\r\n    },\r\n})(TextField)\r\n\r\nconst Calculate = ({ list }) => {\r\n    const currencies = list;\r\n\r\n    const [firstCurrency, setFirstCurrency] = React.useState('USD');\r\n    const [secondCurrency, setSecondCurrency] = React.useState('USD');\r\n    const [amount, setAmount] = React.useState(1);\r\n    const [output, setOutput] = React.useState(1);\r\n    const [apiResponded, setApiResponded] = React.useState(false);\r\n\r\n\r\n    React.useEffect(() => {\r\n        setApiResponded(false);\r\n        const convert_url = amount !== 0 ? `${API_CONVERT}/${amount}/${firstCurrency}/${secondCurrency}` :\r\n            `${API_CONVERT}/${firstCurrency}/${secondCurrency}`;\r\n\r\n        axios.get(convert_url)\r\n            .then(res => {\r\n                setOutput(res.data.result);\r\n                setApiResponded(true);\r\n                console.log(\"test\");\r\n                \r\n            })\r\n    }, [amount, firstCurrency, secondCurrency])\r\n\r\n    const handleChange = (event) => {\r\n        event.target.name === 'select1' ? setFirstCurrency(event.target.value) : setSecondCurrency(event.target.value);\r\n    };\r\n\r\n    const handleAmountChange = (event) => {\r\n        const regExp = /^(\\d+\\.?\\d{0,5}|\\.\\d{1,9})$/;\r\n        let isNumber = regExp.test(event.target.value);\r\n        if (isNumber) setAmount(event.target.value);\r\n        else if (event.target.value === '') setAmount('');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            \r\n            {/* <StyledLoaderContainer><StageSpinner /></StyledLoaderContainer> */}\r\n            {apiResponded ? <Result amount={amount} firstCurrency={firstCurrency} secondCurrency={secondCurrency} output={output} /> :\r\n            <StyledLoaderContainer><StageSpinner /></StyledLoaderContainer>}\r\n            <StyledPaper elevation={24}>\r\n                <Grid container justify=\"center\" alignItems=\"center\">\r\n                    <TextField\r\n                        name=\"select1\"\r\n                        variant=\"outlined\"\r\n                        select\r\n                        label=\"First\"\r\n                        value={firstCurrency}\r\n                        onChange={handleChange}\r\n                    >\r\n                        {currencies.map(option => (\r\n                            <MenuItem key={option.code} value={option.code} >\r\n                                {option.code}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                    <CompareArrowsIcon color=\"primary\" fontSize=\"large\" />\r\n                    <TextField\r\n                        name=\"select2\"\r\n                        variant=\"outlined\"\r\n                        select\r\n                        label=\"Second\"\r\n                        value={secondCurrency}\r\n                        onChange={handleChange}\r\n                    >\r\n                        {currencies.map(option => (\r\n                            <MenuItem key={option.code} value={option.code}>\r\n                                {option.code}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                    <StyledTextFieldGrid item xs={12}>\r\n                        <StyledTextField\r\n                            fullWidth={true}\r\n                            id=\"first-currency\"\r\n                            label=\"Amount of first\"\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            value={amount}\r\n                            onChange={handleAmountChange}\r\n                        />\r\n                    </StyledTextFieldGrid>\r\n\r\n                </Grid>\r\n            </StyledPaper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Calculate;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\n\r\nconst StyledList = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    margin: 15px;\r\n\r\n    height:calc(100vh - 56px - 5vh);\r\n    overflow-y: auto;\r\n\r\n`;\r\n\r\nconst StyledListElement = styled.div`\r\n    background-color: #00000075;\r\n    color: #fff;\r\n    padding: 5px;\r\n    text-align: center;\r\n    margin: 5px;\r\n    width: 210px;\r\n`;\r\n\r\nconst List = ({ list }) => (\r\n    <StyledList>\r\n        {\r\n            list.map(({ code, currency, mid }) =>\r\n            <StyledListElement key={code}>\r\n            <p>{currency}</p>\r\n            <p>{code}</p>\r\n            <p>{mid}</p>\r\n            </StyledListElement>\r\n            )\r\n        }\r\n    </StyledList>\r\n)\r\n\r\nexport default List;","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        light: '#000',\r\n        main: '#000',\r\n        dark: '#000',\r\n        contrastText: '#fff',\r\n      },\r\n      secondary: {\r\n        light: '#ff7961',\r\n        main: '#f44336',\r\n        dark: '#ba000d',\r\n        contrastText: '#000',\r\n      },\r\n    },\r\n  });\r\n\r\nexport default theme;","import React from 'react'\r\nimport axios from 'axios'\r\nimport { API_LIST } from '../config/rest'\r\n\r\n\r\nconst GetCurrencies = () => {\r\n\r\n    const [currenciesList, setCurrenciesList] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        axios.get(API_LIST)\r\n            .then(res => {\r\n                setCurrenciesList(res.data)\r\n            })\r\n    }, [])\r\n\r\n    return currenciesList;\r\n}\r\n\r\nexport default GetCurrencies;","import React from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route\r\n} from 'react-router-dom';\r\n\r\nimport { StageSpinner } from \"react-spinners-kit\";\r\n\r\nimport styled, { createGlobalStyle } from 'styled-components'\r\n\r\nimport Container from './components/container'\r\nimport Navbar from './components/navbar'\r\n\r\nimport Calculate from './components/calculate'\r\nimport List from './components/list'\r\n\r\nimport theme from './config/theme'\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport getCurrencies from './functions/getCurrencies'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css?family=Lato:400,600,900&display=swap');\r\n  body {\r\n    background: #1a2a6c;  /* fallback for old browsers */\r\n    background: -webkit-linear-gradient(to right, #fdbb2d, #b21f1f, #1a2a6c);  /* Chrome 10-25, Safari 5.1-6 */\r\n    background: linear-gradient(to right, #fdbb2d, #b21f1f, #1a2a6c); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\r\n    margin: 0;\r\n  }\r\n  body *{\r\n      box-sizing: border-box;\r\n      font-family: 'Lato', sans-serif;\r\n      font-weight: 900;\r\n  }\r\n`\r\n\r\nconst SpinnerContainer = styled.div`\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst App = () => {\r\n    const listOfCurriences = getCurrencies();\r\n\r\n    return listOfCurriences.length === 0 ? <SpinnerContainer><StageSpinner color=\"#000\" /></SpinnerContainer> :\r\n        (\r\n            <>\r\n                <ThemeProvider theme={theme}>\r\n                    <Router basename={process.env.PUBLIC_URL}>\r\n                        <GlobalStyle />\r\n                        <Container>\r\n                            <Route path=\"/\" component={() => <Calculate list={listOfCurriences} />} exact />\r\n                            <Route path=\"/list\" component={() => <List list={listOfCurriences} />} exact />\r\n                            <Navbar />\r\n                        </Container>\r\n                    </Router>\r\n                </ThemeProvider>\r\n\r\n            </>\r\n        )\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\n\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();"],"sourceRoot":""}